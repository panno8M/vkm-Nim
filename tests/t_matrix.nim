import unittest
import vkm/matrices
import vkm/vectors

template `~=`(a, b): untyped  =
  nearlyEqual(a, b, 1e-3)

suite "matrix multiplication":

  test "diag":
    let m = [[1d,2,3], [4d,5,6], [7d,8,9]]
    let d = diag(m)
    check d == [1d,5,9]
    var m2 = m
    m2.diag = [-1d,-2,-3]
    check m2[0][0] == -1'f32
    check m2[1][1] == -2'f32
    check m2[2][2] == -3'f32
    let m3 = [[1d,0,0], [0d,5,0], [0d,0,9]]
    check m.diag == m3.diag

    let m4 = [[1d,2],[3d,4],[5d,6]]
    check m4.diag == [1d,4]

  test "mat4 * mat4":
    let p = [
      [7.89367, 1.10929, 1.67928, 6.69293 ],
      [5.94461, 3.11095, 2.93005, 0.490001],
      [7.85331, 4.76593, 5.86725, 7.40407 ],
      [3.28632, 2.14797, 2.56676, 6.20656 ]]
    let q = [
      [4.01928, 4.41937, 2.15714, 0.183548],
      [4.56231, 4.36833, 7.72004, 8.40577 ],
      [4.95951, 2.10983, 4.37292, 1.89928 ],
      [8.57785, 3.51489, 6.81346, 3.38207 ]]
    let pxq = [
      [ 75.5422, 28.882 , 32.8261,  46.177 ],
      [150.233 , 73.4991, 87.3318, 142.006 ],
      [ 92.2744, 36.9858, 45.0424,  78.3929],
      [153.228 , 60.187 , 73.3607, 130.572 ]]

    check all pxq ~= p*q

  test "mat4*3 * mat4":
    let p = [
      [0.39522, 5.39296, 7.81726],
      [1.25305, 2.28293, 6.87896],
      [8.04886, 2.79586, 5.38916],
      [3.8848 , 5.40689, 7.38901]]
    let q = [
      [3.14061, 3.61773, 2.17285, 6.66201],
      [7.23764, 2.68321, 8.06908, 1.77431],
      [7.5259 , 5.96595, 1.16839, 2.25085],
      [3.31407, 3.5499 , 1.71381, 7.73247]]
    let pxq = [
      [49.144 , 67.2919, 110.373],
      [78.0624, 77.3114, 131.632],
      [28.5984, 69.6435, 122.8  ],
      [49.5913, 72.577 , 116.698]]

    check all pxq ~= p*q

  test "mat4x3 * mat3x4":
    let p = [
      [2.15555 , 7.54407, 3.83892],
      [3.32702 , 9.99935, 8.16517],
      [7.07694 , 2.23305, 7.31887],
      [0.137593, 7.84212, 7.73943]]
    let q = [
      [3.44239 , 2.05092, 2.63158, 7.4785 ],
      [0.915696, 4.32996, 2.87187, 5.38179],
      [7.42304 , 6.33226, 8.84191, 6.76446]]
    let pxq = [
      [33.8962, 111.001, 107.101],
      [37.4443, 98.8226, 101.541],
      [100.573, 192.111, 197.266]]
    check all pxq ~= p*q

  test "mat4x3 * mat2x4":
    let p = [
      [3.50671, 0.240651, 2.61703],
      [8.07863, 8.86556 , 8.29965],
      [8.58817, 2.30592 , 8.51875],
      [0.28128, 9.59342 , 7.80658]]
    let q = [
      [2.36584, 2.49404, 6.49077, 5.48972],
      [0.15524, 9.07618, 4.34596, 3.70866]]
    let pxq = [
      [85.7327, 90.3127, 125.04 ],
      [112.234, 126.103, 141.709]]
    check all pxq ~= p*q

  test "mat4x2 * mat4":
    let p = [
      [2.91669 , 6.91374],
      [0.625142, 6.84815],
      [0.16436 , 2.94888],
      [3.19676 , 6.36922]]
    let q = [
      [4.25223, 9.85366, 5.80329 , 1.69523],
      [6.68758, 7.18458, 1.42712 , 6.99035],
      [3.37755, 4.44201, 8.9562  , 5.75746],
      [9.86689, 0.71892, 0.812046, 1.34952]]
    let pxq = [
      [24.9354, 124.789 ],
      [46.578 , 144.169 ],
      [32.5054, 116.852 ],
      [33.6756,  84.1304]]
    check all pxq ~= p*q

  test "mat4x2 * mat3x4":
    let p = [
      [1.8357  , 1.16728],
      [1.46547 , 8.71975],
      [0.729659, 4.20488],
      [5.88202 , 3.78859]]
    let q = [
      [9.04853, 1.59807  , 9.1932 , 3.73143],
      [8.12612, 2.5004   , 8.7532 , 6.40991],
      [6.13215, 0.0467961, 1.90477, 3.42501]]
    let pxq = [
      [47.6085, 77.29  ],
      [62.6714, 92.3789],
      [32.8611, 28.5512]]
    check all pxq ~= p*q

  test "mat4x2 * mat2x4":
    let p = [
      [2.63343, 1.16297],
      [7.55765, 1.68212],
      [3.34142, 4.10288],
      [5.08689, 2.25272]]
    let q = [
      [9.47493, 6.21652, 2.58241, 7.0071 ],
      [3.92806, 5.49965, 6.31272, 9.03252]]
    let pxq = [
      [116.207, 47.8563],
      [118.95 , 60.0673]]

    check all pxq ~= p*q
